"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8946],{2164:e=>{e.exports=JSON.parse('[{"id":1,"name":"Kornbrot 500g","category":"Brot","image":"/assets/images/products/Type=Kornbrot.svg","price":2.5},{"id":2,"name":"Kornbrot 1000g","category":"Brot","image":"/assets/images/products/Type=Kornbrot.svg","price":4.4},{"id":3,"name":"Mischbrot 500g","category":"Brot","image":"/assets/images/products/Type=Mischbrot.svg","price":2.5},{"id":4,"name":"Mischbrot 1000g","category":"Brot","image":"/assets/images/products/Type=Mischbrot.svg","price":4.4},{"id":5,"name":"Holzluken 500g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":2.9},{"id":6,"name":"Holzluken 750g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":4},{"id":7,"name":"Bergsteiger 500g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":2.9},{"id":8,"name":"Bergsteiger 750g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":4},{"id":9,"name":"Sommerkorn 500g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":2.9},{"id":10,"name":"Sommerkorn 750g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":4},{"id":11,"name":"Biker 500g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":2.9},{"id":12,"name":"Biker 750g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":4},{"id":13,"name":"Kerbricher 500g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":2.9},{"id":14,"name":"Kerbricher 750g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":4},{"id":15,"name":"Haferflocken 500g","category":"Brot","image":"/assets/images/products/Type=Vollkorn Kastenbrot.svg","price":3.2},{"id":16,"name":"Haferflocken 750g","category":"Brot","image":"/assets/images/products/Type=Vollkorn Kastenbrot.svg","price":4.4},{"id":17,"name":"Voll-Gut 500g","category":"Brot","image":"/assets/images/products/Type=Vollkorn Kastenbrot.svg","price":3.2},{"id":18,"name":"Voll-Gut 750g","category":"Brot","image":"/assets/images/products/Type=Vollkorn Kastenbrot.svg","price":4.4},{"id":19,"name":"Schwabenkornt 500g","category":"Brot","image":"/assets/images/products/Type=Vollkorn Kastenbrot.svg","price":3.5},{"id":20,"name":"Schwabenkorn 1000g","category":"Brot","image":"/assets/images/products/Type=Vollkorn Kastenbrot.svg","price":6},{"id":21,"name":"Feel Happy 500g","category":"Brot","image":"/assets/images/products/Type=Vollkorn Kastenbrot.svg","price":4.2},{"id":22,"name":"Hildegard von Bingen 500g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":3.5},{"id":23,"name":"Hildegard von Bingen 750g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":4.6},{"id":24,"name":"K\xf6nig Ludwig 500g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":3.5},{"id":25,"name":"K\xf6nig Ludwig 750g","category":"Brot","image":"/assets/images/products/Type=Brot Rund.svg","price":4.6}]')},12426:(e,t,a)=>{a.d(t,{z:()=>g});let r=a(2164),o=a(87547),i=a(64437),n=a(17678),s=a(68858),c=a(77104),g=[...r,...o,...i,...a(37568),...n,...s,...c]},17678:e=>{e.exports=JSON.parse('[{"id":54,"name":"Gef\xfcllte Schnecken (Schoko, Pudding, Rosinen, Nuss oder Mohn)","category":"Teilchen","image":"images/","price":2},{"id":55,"name":"Plunder-H\xf6rnchen","category":"Teilchen","image":"images/","price":2},{"id":56,"name":"Taschen Schleifen","category":"Teilchen","image":"images/","price":2},{"id":57,"name":"Kirsch-Plotzer","category":"Teilchen","image":"images/","price":2},{"id":58,"name":"Puddingst\xfcckchen","category":"Teilchen","image":"images/","price":2},{"id":59,"name":"Butterkuchen","category":"Teilchen","image":"images/","price":2},{"id":60,"name":"Streusel","category":"Teilchen","image":"images/","price":1.8},{"id":61,"name":"Schoko-Vanille-H\xf6rnchen","category":"Teilchen","image":"images/","price":1.8},{"id":62,"name":"Quarktasche","category":"Teilchen","image":"images/","price":1.8},{"id":63,"name":"Einback","category":"Teilchen","image":"images/","price":1.2},{"id":64,"name":"Sckokobr\xf6tchen","category":"Teilchen","image":"images/","price":1.5},{"id":65,"name":"Rosinenbr\xf6tchen","category":"Teilchen","image":"images/","price":1.5},{"id":66,"name":"Croissant","category":"Teilchen","image":"images/","price":1.2},{"id":67,"name":"Pain Chocolate","category":"Teilchen","image":"images/","price":1.5},{"id":68,"name":"Muffin","category":"Teilchen","image":"images/","price":1.6},{"id":69,"name":"Granatsplitter","category":"Teilchen","image":"images/","price":2.2}]')},37568:e=>{e.exports=JSON.parse('[{"id":46,"name":"Brezel","category":"Snacks","image":"/assets/images/products/Type=Brezel.svg","price":1},{"id":47,"name":"Laugenstange","category":"Snacks","image":"images/","price":1},{"id":48,"name":"Laugenbr\xf6tchen","category":"Snacks","image":"images/","price":1},{"id":49,"name":"Laugenecke","category":"Snacks","image":"images/","price":1.89},{"id":50,"name":"Laugencroquette","category":"Snacks","image":"images/","price":1.89},{"id":51,"name":"Keimkraft-H\xf6rnchen","category":"Snacks","image":"images/","price":1.89},{"id":52,"name":"K\xe4sestange","category":"Snacks","image":"images/","price":2.69},{"id":53,"name":"K\xe4sestange mit Schinken","category":"Snacks","image":"images/","price":2.69}]')},64437:e=>{e.exports=JSON.parse('[{"id":31,"name":"Doppelweck","category":"Br\xf6tchen","image":"/assets/images/products/Type=Doppelweck.svg","price":0.8},{"id":32,"name":"Samstagsweck","category":"Br\xf6tchen","image":"/assets/images/products/Type=Br\xf6tchen.svg","price":0.8},{"id":33,"name":"Sternweck","category":"Br\xf6tchen","image":"/assets/images/products/Type=Brot Rund.svg","price":0.6},{"id":34,"name":"Flitweck","category":"Br\xf6tchen","image":"/assets/images/products/Type=Br\xf6tchen.svg","price":0.8},{"id":35,"name":"Els\xe4sser","category":"Br\xf6tchen","image":"/assets/images/products/Type=Br\xf6tchen.svg","price":0.6},{"id":36,"name":"Knusperweck","category":"Br\xf6tchen","image":"/assets/images/products/Type=Br\xf6tchen.svg","price":0.6},{"id":37,"name":"Roggenweck","category":"Br\xf6tchen","image":"/assets/images/products/Type=Br\xf6tchen.svg","price":0.7},{"id":38,"name":"K\xf6rnerweck","category":"Br\xf6tchen","image":"/assets/images/products/Type=Br\xf6tchen.svg","price":0.8},{"id":39,"name":"Mohn-Br\xf6tchen","category":"Br\xf6tchen","image":"/assets/images/products/Type=Br\xf6tchen.svg","price":0.7},{"id":40,"name":"Sesam-Br\xf6tchen","category":"Br\xf6tchen","image":"/assets/images/products/Type=Br\xf6tchen.svg","price":0.7},{"id":41,"name":"K\xfcmmel-Br\xf6tchen","category":"Br\xf6tchen","image":"/assets/images/products/Type=Br\xf6tchen.svg","price":0.7},{"id":42,"name":"Dinkel-Br\xf6tchen","category":"Br\xf6tchen","image":"/assets/images/products/Type=Br\xf6tchen.svg","price":0.85},{"id":43,"name":"Mohn-H\xf6rnchen","category":"Br\xf6tchen","image":"/assets/images/products/Type=Croissant.svg","price":1.2},{"id":44,"name":"Sesam-H\xf6rnchen","category":"Br\xf6tchen","image":"/assets/images/products/Type=Croissant.svg","price":1.2},{"id":45,"name":"K\xe4se-Br\xf6tchen","category":"Br\xf6tchen","image":"images/","price":1.2}]')},68858:e=>{e.exports=JSON.parse('[{"id":70,"name":"Rahmkuchen","category":"Kuchen","image":"/assets/images/products/Type=Kuchen.svg","price":18},{"id":71,"name":"Rahmkuchen (1 St\xfcck)","category":"Kuchen","image":"/assets/images/products/Type=Kuchen.svg","price":1.8},{"id":72,"name":"K\xe4sekuchen","category":"Kuchen","image":"/assets/images/products/Type=Kuchen.svg","price":18},{"id":73,"name":"K\xe4sekuchen (1 St\xfcck)","category":"Kuchen","image":"/assets/images/products/Type=Kuchen.svg","price":1.8},{"id":74,"name":"Apfelkuchen","category":"Kuchen","image":"/assets/images/products/Type=Kuchen.svg","price":18},{"id":75,"name":"Apfelkuchen (1 St\xfcck)","category":"Kuchen","image":"/assets/images/products/Type=Kuchenst\xfcck.svg","price":1.8},{"id":76,"name":"Kirschkuchen","category":"Kuchen","image":"/assets/images/products/Type=Kuchen.svg","price":18},{"id":77,"name":"Kirschkuchen (1 St\xfcck)","category":"Kuchen","image":"/assets/images/products/Type=Kuchenst\xfcck.svg","price":1.8},{"id":78,"name":"Blechkuchen","category":"Kuchen","image":"images/","price":45},{"id":79,"name":"Blechkuchen (1 St\xfcck)","category":"Kuchen","image":"images/","price":2.2},{"id":80,"name":"Marmorkuchen","category":"Kuchen","image":"images/","price":18},{"id":81,"name":"Marmorkuchen (1 St\xfcck)","category":"Kuchen","image":"images/","price":1.2},{"id":82,"name":"Zitronenkuchen","category":"Kuchen","image":"images/","price":18},{"id":83,"name":"Zitronenkuchen (1 St\xfcck)","category":"Kuchen","image":"images/","price":1.2},{"id":84,"name":"Nusskuchen","category":"Kuchen","image":"images/","price":18},{"id":85,"name":"Nusskuchen (1 St\xfcck)","category":"Kuchen","image":"images/","price":1.2},{"id":86,"name":"Kranzkuchen ungef\xfcllt","category":"Kuchen","image":"/assets/images/products/Type=Kranzkuchen.svg","price":18},{"id":87,"name":"Kranzkuchen ungef\xfcllt (1/4 St\xfcck)","category":"Kuchen","image":"/assets/images/products/Type=Kranzkuchen.svg","price":4.5},{"id":88,"name":"Kranzkuchen gef\xfcllt (Nuss, Schoko, Quark oder Pudding","category":"Kuchen","image":"/assets/images/products/Type=Kranzkuchen.svg","price":20},{"id":89,"name":"Kranzkuchen gef\xfcllt (Nuss, Schoko, Quark oder Pudding (1/4 St\xfcck)","category":"Kuchen","image":"/assets/images/products/Type=Kranzkuchen.svg","price":5},{"id":90,"name":"Streuselkuchen gro\xdf","category":"Kuchen","image":"images/","price":12},{"id":91,"name":"Streuselkuchen gro\xdf (1/4 St\xfcck)","category":"Kuchen","image":"images/","price":3},{"id":92,"name":"Streuselkuchen klein","category":"Kuchen","image":"images/","price":7},{"id":93,"name":"Zopf ungef\xfcllt","category":"Kuchen","image":"/assets/images/products/Type=Hefezopf.svg","price":7},{"id":94,"name":"Zopf gef\xfcllt (Nuss, Schoko, Quark oder Pudding)","category":"Kuchen","image":"/assets/images/products/Type=Hefezopf.svg","price":10},{"id":95,"name":"Rosinenbrot","category":"Kuchen","image":"images/","price":9}]')},77104:e=>{e.exports=JSON.parse('[{"id":96,"name":"Obstboden","category":"Torten","image":"images/","price":5.5},{"id":97,"name":"Tortenboden","category":"Torten","image":"images/","price":5.5},{"id":98,"name":"Sahnerollen","category":"Torten","image":"/assets/images/products/Type=Rolle.svg","price":20},{"id":99,"name":"Sahnerollen (1 St\xfcck)","category":"/assets/images/products/Type=Rolle.svg","image":"images/","price":2},{"id":100,"name":"Schwarzw\xe4lder-Kirsch-Torte","category":"Torten","image":"images/","price":45},{"id":101,"name":"Sahne-Torte","category":"Torten","image":"images/","price":36},{"id":102,"name":"Buttercreme-Torte","category":"Torten","image":"images/","price":45},{"id":103,"name":"Buttercreme-Rolle","category":"Torten","image":"/assets/images/products/Type=Rolle.svg","price":28}]')},78946:(e,t,a)=>{a.d(t,{A:()=>g});var r=a(12426);let o="http://localhost:5000",i=(()=>{let e=r.z.map(e=>({...e,image:e.image||"default_image_path.jpg",description:e.description||"Frische ".concat(e.name," aus unserer B\xe4ckerei."),stock:Math.floor(50*Math.random())+5,dailyTarget:Math.floor(41*Math.random())+10,isActive:.5>Math.random()})),t=(()=>{let t=[],a=new Date;for(let r=0;r<60;r++){let o=new Date(a);o.setDate(o.getDate()-r);let i=o.toISOString().split("T")[0],n=o.getDay(),s=0===n||6===n,c=Math.floor(Math.random()*(s?15:10))+(s?5:1);for(let a=0;a<c;a++){let r=e[Math.floor(Math.random()*e.length)],o=Math.floor(5*Math.random())+1;t.push({id:"sale-".concat(i,"-").concat(a),date:i,product_id:r.id,product_name:r.name,quantity:o,total:Number((r.price*o).toFixed(2)),payment_method:["Bargeld","EC-Karte","Kreditkarte","PayPal"][Math.floor(4*Math.random())]})}}return t})(),a=(()=>{let t=[],a=new Date,r=["Max M\xfcller","Anna Schmidt","Thomas Weber","Lisa Becker"];for(let o=0;o<60;o++){let i=new Date(a);i.setDate(i.getDate()-o);let n=i.toISOString().split("T")[0],s=i.getDay(),c=e.filter(e=>0===s||6===s?["Kuchen","Torte","Geb\xe4ck"].includes(e.category):1!==s&&4!==s||["Brot","Br\xf6tchen"].includes(e.category)),g=Math.floor(8*Math.random())+5;[...c.length>0?c:e].sort(()=>.5-Math.random()).slice(0,Math.min(g,c.length||e.length)).forEach((e,a)=>{let o=15;"Brot"===e.category&&(o=30),"Br\xf6tchen"===e.category&&(o=60),("Kuchen"===e.category||"Torte"===e.category)&&(o=8);let i=Math.floor(Math.random()*o)+o,s=Math.floor(i*(.1*Math.random()+.05));t.push({id:"prod-".concat(n,"-").concat(a),date:n,product_id:e.id,product_name:e.name,quantity_produced:i,waste:s,staff_name:r[Math.floor(Math.random()*r.length)]})})}return t})(),o=(()=>{let e=[],t=new Date,a=["Einnahmen: Verkauf","Einnahmen: Sonstiges","Ausgaben: Zutaten","Ausgaben: Personal","Ausgaben: Miete","Ausgaben: Energie","Ausgaben: Sonstiges"];for(let r=0;r<60;r++){let o=new Date(t);o.setDate(o.getDate()-r);let i=o.toISOString().split("T")[0],n=Math.floor(4*Math.random())+2;for(let t=0;t<n;t++){let r=a[Math.floor(Math.random()*a.length)],o=r.startsWith("Einnahmen");e.push({id:"fin-".concat(i,"-").concat(t),date:i,category:r,amount:o?Math.round((500*Math.random()+50)*100)/100:-1*Math.round((300*Math.random()+20)*100)/100,description:o?"Tagesumsatz":"Regelm\xe4\xdfige Ausgabe"})}}return e})();return{products:e,salesData:t,productionData:a,financialData:o,inventoryData:[{id:1,name:"Mehl (Weizen)",quantity:45,unit:"kg",min_stock_level:20,last_restocked:new Date(Date.now()-432e6).toISOString().split("T")[0]},{id:2,name:"Mehl (Roggen)",quantity:32,unit:"kg",min_stock_level:15,last_restocked:new Date(Date.now()-6912e5).toISOString().split("T")[0]},{id:3,name:"Zucker",quantity:18,unit:"kg",min_stock_level:10,last_restocked:new Date(Date.now()-2592e5).toISOString().split("T")[0]},{id:4,name:"Butter",quantity:9,unit:"kg",min_stock_level:8,last_restocked:new Date(Date.now()-1728e5).toISOString().split("T")[0]},{id:5,name:"Eier",quantity:120,unit:"St\xfcck",min_stock_level:60,last_restocked:new Date(Date.now()-3456e5).toISOString().split("T")[0]},{id:6,name:"Milch",quantity:15,unit:"Liter",min_stock_level:10,last_restocked:new Date(Date.now()-864e5).toISOString().split("T")[0]},{id:7,name:"Hefe",quantity:3,unit:"kg",min_stock_level:2,last_restocked:new Date(Date.now()-864e6).toISOString().split("T")[0]},{id:8,name:"Schokolade",quantity:5,unit:"kg",min_stock_level:3,last_restocked:new Date(Date.now()-6048e5).toISOString().split("T")[0]},{id:9,name:"Sultaninen",quantity:4,unit:"kg",min_stock_level:2,last_restocked:new Date(Date.now()-7776e5).toISOString().split("T")[0]},{id:10,name:"N\xfcsse",quantity:7,unit:"kg",min_stock_level:5,last_restocked:new Date(Date.now()-5184e5).toISOString().split("T")[0]},{id:11,name:"Sauerteig",quantity:2,unit:"kg",min_stock_level:1,last_restocked:new Date(Date.now()-864e5).toISOString().split("T")[0]},{id:12,name:"Salz",quantity:10,unit:"kg",min_stock_level:5,last_restocked:new Date(Date.now()-1296e6).toISOString().split("T")[0]}],staffData:[{id:1,name:"Max M\xfcller",role:"B\xe4ckermeister",productivity:95,hours_worked:168,salary:4200},{id:2,name:"Anna Schmidt",role:"B\xe4ckermeister",productivity:92,hours_worked:160,salary:3900},{id:3,name:"Thomas Weber",role:"B\xe4cker",productivity:87,hours_worked:160,salary:3400},{id:4,name:"Lisa Becker",role:"Konditorin",productivity:93,hours_worked:152,salary:3600},{id:5,name:"Julia Klein",role:"Verkauf",productivity:90,hours_worked:140,salary:2800},{id:6,name:"David Wagner",role:"Verkauf",productivity:85,hours_worked:142,salary:2750},{id:7,name:"Sophie Hoffmann",role:"Gesch\xe4ftsf\xfchrung",productivity:98,hours_worked:170,salary:5200}],customerData:[{id:1,name:"Cafe Sonnenblick",type:"Business",total_spent:1250.45,visits:35,last_visit:new Date(Date.now()-1728e5).toISOString().split("T")[0]},{id:2,name:"Hotel Bergblick",type:"Business",total_spent:3820.75,visits:42,last_visit:new Date(Date.now()-864e5).toISOString().split("T")[0]},{id:3,name:"Johanna Meyer",type:"Individual",total_spent:342.5,visits:28,last_visit:new Date(Date.now()-2592e5).toISOString().split("T")[0]},{id:4,name:"Peter Fischer",type:"Individual",total_spent:189.25,visits:15,last_visit:new Date(Date.now()-432e6).toISOString().split("T")[0]},{id:5,name:"Restaurant Seehof",type:"Business",total_spent:2750.8,visits:31,last_visit:new Date(Date.now()-3456e5).toISOString().split("T")[0]},{id:6,name:"Maria Schulz",type:"Individual",total_spent:415.3,visits:32,last_visit:new Date(Date.now()-1728e5).toISOString().split("T")[0]},{id:7,name:"Kindergarten Sonnenschein",type:"Business",total_spent:1875.2,visits:25,last_visit:new Date(Date.now()-864e5).toISOString().split("T")[0]},{id:8,name:"Klaus Becker",type:"Individual",total_spent:275.9,visits:21,last_visit:new Date(Date.now()-2592e5).toISOString().split("T")[0]},{id:9,name:"Seniorenheim Waldblick",type:"Business",total_spent:3250.45,visits:48,last_visit:new Date(Date.now()-1728e5).toISOString().split("T")[0]},{id:10,name:"Sandra M\xfcller",type:"Individual",total_spent:198.75,visits:18,last_visit:new Date(Date.now()-5184e5).toISOString().split("T")[0]}]}})(),n=(e,t)=>{let a=new Date,r=new Date(a);switch(t){case"day":r=new Date(a);break;case"week":r.setDate(a.getDate()-7);break;case"month":r.setMonth(a.getMonth()-1);break;case"year":r.setFullYear(a.getFullYear()-1)}let o=r.toISOString().split("T")[0];return e.filter(e=>e.date>=o)},s=(e,t)=>{let a,r=[],o=new Date;switch(t){case"day":a=1;break;case"week":a=7;break;case"month":a=30;break;case"year":a=365}if("day"===t)for(let t=0;t<24;t++){let a=t.toString().padStart(2,"0");r.push({date:"".concat(o.toISOString().split("T")[0]," ").concat(a,":00"),value:Math.floor(50*Math.random())+10*("waste"!==e)})}else for(let t=0;t<a;t++){let a=new Date(o);a.setDate(a.getDate()-t);let i=a.toISOString().split("T")[0];r.push({date:i,value:Math.floor(100*Math.random())+50*("waste"!==e)})}return r.sort((e,t)=>e.date.localeCompare(t.date))},c=e=>{let t=n(i.salesData,e),a=n(i.productionData,e),r=n(i.financialData,e),o=t.reduce((e,t)=>e+t.total,0),s=t.reduce((e,t)=>e+t.quantity,0),c=a.reduce((e,t)=>e+t.quantity_produced,0),g=a.reduce((e,t)=>e+t.waste,0),d=r.filter(e=>e.amount<0).reduce((e,t)=>e+Math.abs(t.amount),0),m=r.filter(e=>e.amount>0).reduce((e,t)=>e+t.amount,0),u=new Set(t.map(e=>e.id.split("-")[1])).size;return{totalSales:o,totalItems:s,totalProduced:c,totalWaste:g,transactions:u,uniqueTransactions:new Set(t.map(e=>e.id.split("-")[1]+"-"+e.id.split("-")[2])).size,expenses:d,revenue:m,profit:m-d,averageOrderValue:u>0?o/u:0,wastageRate:c>0?g/c*100:0,profitMargin:m>0?(m-d)/m*100:0}},g={getProducts:async()=>{try{let e=await fetch("".concat(o,"/products"));if(!e.ok)throw Error("Failed to fetch products");return await e.json()}catch(e){return console.error("Error fetching products, using mock data:",e),i.products}},getProductById:async e=>{try{let t=await fetch("".concat(o,"/products/").concat(e));if(!t.ok)throw Error("Failed to fetch product with id ".concat(e));return await t.json()}catch(a){console.error("Error fetching product with id ".concat(e,", using mock data:"),a);let t=i.products.find(t=>t.id===e);if(t)return t;throw Error("Mock product with id ".concat(e," not found"))}},createProduct:async e=>{try{let t=await fetch("".concat(o,"/products"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok)throw Error("Failed to create product");return await t.json()}catch(a){console.error("Error creating product, using mock implementation:",a);let t={id:i.products.length>0?Math.max(...i.products.map(e=>e.id))+1:1,...e};return i.products.push(t),t}},updateProduct:async(e,t)=>{try{let a=await fetch("".concat(o,"/products/").concat(e),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!a.ok)throw Error("Failed to update product with id ".concat(e));return await a.json()}catch(r){console.error("Error updating product with id ".concat(e,", using mock implementation:"),r);let a=i.products.findIndex(t=>t.id===e);if(a>-1)return i.products[a]={...i.products[a],...t},i.products[a];throw Error("Mock product with id ".concat(e," not found for update"))}},deleteProduct:async e=>{try{let t=await fetch("".concat(o,"/products/").concat(e),{method:"DELETE"});if(!t.ok)throw Error("Failed to delete product with id ".concat(e));return await t.json()}catch(a){console.error("Error deleting product with id ".concat(e,", using mock implementation:"),a);let t=i.products.findIndex(t=>t.id===e);if(t>-1)return i.products.splice(t,1),{message:"Product with id ".concat(e," deleted successfully (mock)")};throw Error("Mock product with id ".concat(e," not found for deletion"))}},getOrders:async()=>{try{let e=await fetch("".concat(o,"/orders"));if(!e.ok)throw Error("Failed to fetch orders");return await e.json()}catch(e){return console.error("Error fetching orders, using mock data:",e),[]}},getOrder:async e=>{try{let t=await fetch("".concat(o,"/orders/").concat(e));if(!t.ok)throw Error("Failed to fetch order ".concat(e));return await t.json()}catch(t){throw console.error("Error fetching order ".concat(e,":"),t),t}},createOrder:async e=>{try{let t=await fetch("".concat(o,"/orders"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!t.ok){let e=await t.json().catch(()=>({}));throw Error("Failed to create order: ".concat(e.details||t.statusText))}return await t.json()}catch(e){throw console.error("Error creating order:",e),e}},updateOrder:async(e,t)=>{try{let a=await fetch("".concat(o,"/orders/").concat(e),{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!a.ok){let t=await a.json().catch(()=>({}));throw Error("Failed to update order ".concat(e,": ").concat(t.details||a.statusText))}return await a.json()}catch(t){throw console.error("Error updating order ".concat(e,":"),t),t}},deleteOrder:async e=>{try{let t=await fetch("".concat(o,"/orders/").concat(e),{method:"DELETE"});if(!t.ok)throw Error("Failed to delete order ".concat(e));return await t.json()}catch(t){throw console.error("Error deleting order ".concat(e,":"),t),t}},getBakingList:async e=>{try{let t=e instanceof Date?e.toISOString().split("T")[0]:new Date().toISOString().split("T")[0],a=await fetch("".concat(o,"/baking-list?date=").concat(t));if(!a.ok)throw Error("Failed to fetch baking list: ".concat(a.statusText));return await a.json()}catch(e){throw console.error("Error fetching baking list:",e),e}},getSummaryData:async e=>{try{let t=await fetch("".concat(o,"/dashboard/summary?range=").concat(e));if(!t.ok)throw Error("Failed to fetch summary data");return await t.json()}catch(t){return console.error("Error fetching summary data, using mock data:",t),c(e)}},getTimeSeriesData:async(e,t)=>{try{let a=await fetch("".concat(o,"/dashboard/timeseries?type=").concat(e,"&range=").concat(t));if(!a.ok)throw Error("Failed to fetch ".concat(e," time series data"));return await a.json()}catch(a){return console.error("Error fetching ".concat(e," time series data, using mock data:"),a),s(e,t)}},getSalesData:async e=>{try{let t=await fetch("".concat(o,"/dashboard/sales?range=").concat(e));if(!t.ok)throw Error("Failed to fetch sales data");return await t.json()}catch(t){return console.error("Error fetching sales data, using mock data:",t),n(i.salesData,e)}},getProductionData:async e=>{try{let t=await fetch("".concat(o,"/dashboard/production?range=").concat(e));if(!t.ok)throw Error("Failed to fetch production data");return await t.json()}catch(t){return console.error("Error fetching production data, using mock data:",t),n(i.productionData,e)}},getFinancialData:async e=>{try{let t=await fetch("".concat(o,"/dashboard/finances?range=").concat(e));if(!t.ok)throw Error("Failed to fetch financial data");return await t.json()}catch(t){return console.error("Error fetching financial data, using mock data:",t),n(i.financialData,e)}},getInventoryData:async()=>{try{let e=await fetch("".concat(o,"/dashboard/inventory"));if(!e.ok)throw Error("Failed to fetch inventory data");return await e.json()}catch(e){return console.error("Error fetching inventory data, using mock data:",e),i.inventoryData}},getStaffData:async()=>{try{let e=await fetch("".concat(o,"/dashboard/staff"));if(!e.ok)throw Error("Failed to fetch staff data");return await e.json()}catch(e){return console.error("Error fetching staff data, using mock data:",e),i.staffData}},getCustomerData:async()=>{try{let e=await fetch("".concat(o,"/dashboard/customers"));if(!e.ok)throw Error("Failed to fetch customer data");return await e.json()}catch(e){return console.error("Error fetching customer data, using mock data:",e),i.customerData}},getWorkflows:async()=>{try{let e=await fetch("".concat(o,"/workflows"));if(!e.ok)throw Error("Failed to fetch workflows");return await e.json()}catch(e){return console.error("Error fetching workflows, using mock data:",e),[{id:"croissant_production",name:"Croissant Produktion",version:"1.2",status:"active",steps:7},{id:"sourdough_bread",name:"Sauerteigbrot",version:"1.0",status:"active",steps:10},{id:"hefeteig_production",name:"Hefeteig Produktion",version:"1.0",status:"active",steps:5},{id:"filling_production",name:"F\xfcllungen Produktion",version:"1.0",status:"active",steps:4}]}},getWorkflowDetails:async e=>{try{let t=await fetch("".concat(o,"/workflows/").concat(e));if(!t.ok)throw Error("Failed to fetch workflow ".concat(e));return await t.json()}catch(t){throw console.error("Error fetching workflow ".concat(e,":"),t),t}},getHefezopfOrders:async e=>{try{let t=await fetch("".concat(o,"/production/hefezopf-orders?date=").concat(e));if(!t.ok)throw Error("Failed to fetch hefezopf orders for ".concat(e));return await t.json()}catch(e){return console.error("Error fetching hefezopf orders:",e),{"Hefezopf Plain":15,"Hefekranz Nuss":8,"Hefekranz Schoko":12,"Hefekranz Pudding":5,"Hefekranz Marzipan":4,"Mini Hefezopf":20,"Hefeschnecken Nuss":30,"Hefeschnecken Schoko":25}}},saveProductionPlan:async(e,t)=>{try{let a=await fetch("".concat(o,"/production/plans"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({date:e,plan:t})});if(!a.ok)throw Error("Failed to save production plan");return await a.json()}catch(e){return console.error("Error saving production plan:",e),{success:!0,id:"mock-plan-id"}}}}},87547:e=>{e.exports=JSON.parse('[{"id":26,"name":"Kasten Wei\xdfbrot","category":"Baguette","image":"/assets/images/products/Type=Kasten-Wei\xdfbrot.svg","price":3.4},{"id":27,"name":"Baguette klein","category":"Baguette","image":"/assets/images/products/Type=Baguette.svg","price":2.2},{"id":28,"name":"Baguette gro\xdf","category":"Baguette","image":"/assets/images/products/Type=Baguette.svg","price":3.4},{"id":29,"name":"Roggenflit klein","category":"Baguette","image":"/assets/images/products/Type=Baguette.svg","price":2.6},{"id":30,"name":"Roggenflit gro\xdf","category":"Baguette","image":"images/","price":4.6}]')}}]);